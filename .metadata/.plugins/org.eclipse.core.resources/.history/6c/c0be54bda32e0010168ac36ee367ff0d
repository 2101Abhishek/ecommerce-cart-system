package com.ecommerce.service;

import com.ecommerce.dao.ProductDAO;
import com.ecommerce.exception.OutOfStockException;
import com.ecommerce.exception.ProductNotFoundException;
import com.ecommerce.model.CartItem;
import com.ecommerce.model.Product;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class CartService {
    private List<CartItem> cartItems = new ArrayList<>();
    private ProductDAO productDAO = new ProductDAO();
    
    public void addToCart(int productId, int quantity) 
            throws ProductNotFoundException, OutOfStockException {
        try {
            // Get the current stock from database
            int availableStock = productDAO.getStockQuantity(productId);
            if (availableStock < quantity) {
                throw new OutOfStockException("Only " + availableStock + " items available in stock");
            }
            
            Product product = productDAO.getProductById(productId);
            
            // Check if product already in cart
            for (CartItem item : cartItems) {
                if (item.getProduct().getId() == productId) {
                    // Check if total requested (existing + new) exceeds stock
                    if (availableStock < item.getQuantity() + quantity) {
                        throw new OutOfStockException("Cannot add " + quantity + " more. Only " + 
                            (availableStock - item.getQuantity()) + " additional items available");
                    }
                    item.setQuantity(item.getQuantity() + quantity);
                    return;
                }
            }
            
            // If not in cart, add new item
            cartItems.add(new CartItem(product, quantity));
        } catch (SQLException e) {
            throw new ProductNotFoundException("Database error: " + e.getMessage());
        }
    }
    
    // ... rest of the methods remain the same ...
}